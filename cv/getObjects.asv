function [Objects] = getObjects(Image, show)
red.Name = 'red'; red.BW = redMask(Image);
blue.Name = 'blue'; blue.BW = blueMask(Image);
green.Name = 'green'; green.BW = greenMask(Image);
yellow.Name = 'yellow'; yellow.BW = yellowMask(Image);

clear Objects red green blue yellow;
Objects(1) = red; Objects(2) = green; Objects(3) = blue; Objects(4) = yellow;
% Gets the region props for each coloured object
for i = 1:length(Objects)
    BW = bwareaopen(Objects(i).BW, 300);
    Objects(i).BW = imfill(BW, 'holes');
    Objects(i).stats = regionprops(Objects(i).BW, 'all');
    %     figure; imshow(Objects(i).BW); hold on;
end

threshArea = 7500; %threshold on area of
% gets a coloured object back:
for i = 1:length(Objects)
    s = Objects(i).stats;
    for k = 1:length(s)
        %         newObject = s(k).Image;
        coloured = zeros([size(s(k).Image), 3]);
        minRow = min(s(k).PixelList(:, 2))-1;
        minCol = min(s(k).PixelList(:, 1))-1;
        for j = 1:length(s(k).PixelList)
            coloured(s(k).PixelList(j, 2)-minRow, s(k).PixelList(j, 1)-minCol, :) = Image(s(k).PixelList(j, 2), s(k).PixelList(j, 1), :);
        end
        c = coloured/255;
        Objects(i).segmented(k).Image = c;
        %         figure; imshow(Objects(i).segmented(k).Image); pause();
        
        %% Extract the faces:
        c = rgb2gray(c);
        c = imadjust(c, [0.3, 1], [0, 1]);
        
        % Check for circles:
        [row, col] = size(c);
        [center, radii] = imfindcircles(c, [10, floor(col/2)], 'ObjectPolarity', 'bright');
        if (~(isempty(center)))
            if (show)
            figure; imshow(c); hold on;
            viscircles(center, radii, 'EdgeColor', 'b');
            Objects(i).Shape(k).Type = "circle";
            %             Objects(i).Shape(k).Centroid = center;
            %             Objects(i).Shape(k).Size = radii;
            
        else
            %             fprintf("No circle\n");
            h1 = histogram(c, 'BinLimits', [0.0001, max(max(c))]);
            maxima = islocalmax(h1.Values, 'MaxNumExtrema',2);
            f1 = find(maxima == 1);
            vals = h1.Values(f1(1):f1(2));
            minima = islocalmin(vals, 'MaxNumExtrema', 1);
            f2 = find(minima == 1);
            bin = imbinarize(c, h1.BinWidth*(f2+f1(1)));
            st1 = strel('disk', 4);
            bin = imclose(bin, st1);
            bin = bwareaopen(bin, 50);
            bin = imfill(bin, 'holes');
            rp = regionprops(bin, 'area', 'centroid');
            
            if (rp.Area > threshArea) %is triangle
                Objects(i).Shape(k).Type = "triangle";
            else
                Objects(i).Shape(k).Type = "square";
            end
            %             Object(i).Shape(k).Centroid = rp.Centroid;
            %             Object(i).Shape(k).Size = rp.Area;
            figure; imshow(c);
            hold on;
        end
        fprintf("Found a %s\n", Objects(i).Shape(k).Type);
    end
end

end

